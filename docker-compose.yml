version: '3.8'

services:
  application:
    restart: unless-stopped
    build: .
    environment:
      TOKEN: ${TOKEN}
      SQL_DATABASE: ${SQL_DATABASE}
      SQL_USER: ${SQL_USER}
      SQL_PASSWORD: ${SQL_PASSWORD}
      SQL_HOST: ${SQL_HOST}
    env_file:
      - ./.env
    depends_on:
        - db
    networks:
      - app_network

  db:
    image: postgres:12.0-alpine
    container_name: db_rabotov
    restart: unless-stopped
    environment:
      - POSTGRES_USER=bot_admin
      - POSTGRES_PASSWORD=bot_admin
      - POSTGRES_DB=rabotov_bot
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  adminer:
    restart: unless-stopped
    image: adminer
    expose:
      - 8080
    container_name: rabotov_bot_adminer
    networks:
      - app_network
      - server

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
  server:
    external: true
